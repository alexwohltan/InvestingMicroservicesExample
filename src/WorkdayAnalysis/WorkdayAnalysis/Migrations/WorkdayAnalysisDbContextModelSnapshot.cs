// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkdayAnalysis;

#nullable disable

namespace WorkdayAnalysis.Migrations
{
    [DbContext(typeof(WorkdayAnalysisDbContext))]
    partial class WorkdayAnalysisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataStructures.WorkdayAnalysis.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FundamentalDataId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkdayFINGoLive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkdayHCMGoLive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkdayPKNGoLive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkdayPLNGoLive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkdaySRCGoLive")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DataStructures.WorkdayAnalysis.AccountFiling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostOfRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FinancingCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FreeCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GeneralAdministrative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvestingCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OperatingCashflow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OperatingExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OperatingIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PretaxIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PretaxIncomeAdj")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingGeneralAdministrative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingMarketing")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Filings");
                });

            modelBuilder.Entity("DataStructures.WorkdayAnalysis.AccountSharePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CloseAdj")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("DataStructures.WorkdayAnalysis.WorkdayAdressableMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("DataStructures.WorkdayAnalysis.AccountFiling", b =>
                {
                    b.HasOne("DataStructures.WorkdayAnalysis.Account", null)
                        .WithMany("Filings")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("DataStructures.WorkdayAnalysis.AccountSharePrice", b =>
                {
                    b.HasOne("DataStructures.WorkdayAnalysis.Account", null)
                        .WithMany("Prices")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("DataStructures.WorkdayAnalysis.Account", b =>
                {
                    b.Navigation("Filings");

                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
